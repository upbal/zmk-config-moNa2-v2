#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt {
    quick-tap-ms = <300>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        layer4_ESC {
            bindings = <&lt 6 ESC>;
            key-positions = <39 38>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        ASYNET_PW: ASYNET_PW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N5 &kp R &kp Y &kp N6 &kp C &kp H &kp U &kp LS(U) &kp RET>;
            label = "ASYNET_PW";
        };

        Mac_PW: Mac_PW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp K &kp Y &kp O &kp N &kp K &kp N0 &kp N1 &kp O &kp LS(V) &kp E &kp RET>;
            label = "MAC_PW";
        };

        bt0: bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "BT0";
        };

        bt1: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 0 &tog_off 1>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "BT1";
        };

        MagicConnect_PW: MagicConnect_PW {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N8 &kp N3 &kp T &kp LS(T) &kp C &kp F &kp LS(Q) &kp LS(X) &kp LS(M) &kp LS(R) &kp RET>;
            label = "MAGICCONNECT_PW";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_right_left: mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        win_default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R                      &kp T                                                      &kp Y        &kp U  &kp I        &kp O     &kp P
&kp A      &kp S         &kp D         &kp F                      &kp G                                       &none          &kp H        &kp J  &kp K        &kp L     &kp MINUS
&kp Z      &kp X         &kp C         &kp V                      &kp B        &none                          &none          &kp N        &kp M  &kp AT_SIGN  &mkp MB1  &mkp MB2
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT LANGUAGE_2  &lt 2 SPACE  &lt_to_layer_0 4 LANGUAGE_1    &kp BACKSPACE  &lt 3 ENTER                                &lt 8 DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        mac_default_layer {
            bindings = <
&kp Q             &kp W      &kp E         &kp R                      &kp T                                                      &kp Y        &kp U  &kp I        &kp O     &kp P
&kp A             &kp S      &kp D         &kp F                      &kp G                                       &none          &kp H        &kp J  &kp K        &kp L     &kp MINUS
&kp Z             &kp X      &kp C         &kp V                      &kp B        &none                          &none          &kp N        &kp M  &kp AT_SIGN  &mkp MB1  &mkp MB2
&kp LEFT_COMMAND  &kp LCTRL  &kp LEFT_ALT  &mt LEFT_SHIFT LANGUAGE_2  &lt 2 SPACE  &lt_to_layer_0 5 LANGUAGE_1    &kp BACKSPACE  &lt 3 ENTER                                &lt 8 DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&trans     &trans      &kp F2       &kp F5         &kp F5                                  &kp F7                 &kp F8          &kp F12          &kp FSLH      &kp BSLH
&kp POUND  &kp DOLLAR  &kp PERCENT  &kp AMPERSAND  &kp LEFT_PARENTHESIS            &trans  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp SEMICOLON    &kp COLON     &trans
&trans     &trans      &trans       &trans         &trans                &trans    &trans  &kp COMMA              &kp DOT         &kp EXCLAMATION  &kp QUESTION  &kp PIPE
&trans     &trans      &trans       &trans         &trans                &trans    &trans  &trans                                                                &trans
            >;

            sensor-bindings = <&scroll_right_left>;
        };

        layer_2 {
            bindings = <
&kp TAB       &kp N7  &kp N8   &kp N9  &kp MINUS                      &trans  &trans    &trans    &trans     &kp DEL
&kp ASTERISK  &kp N4  &kp N5   &kp N6  &kp PLUS               &trans  &trans  &kp HOME  &kp UP    &kp END    &trans
&kp FSLH      &kp N1  &kp N2   &kp N3  &kp EQUAL  &trans      &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&kp ESC       &kp N0  &kp DOT  &trans  &trans     &kp BSPC    &trans  &trans                                 &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3_function_win {
            bindings = <
&none                  &none              &none      &none          &none                            &MagicConnect_PW  &none      &Mac_PW    &none          &ASYNET_PW
&kp LC(LS(SEMICOLON))  &kp LC(SEMICOLON)  &kp LC(D)  &kp LA(LEFT)   &kp LA(RIGHT)            &trans  &kp LC(A)         &kp LC(C)  &kp LC(V)  &kp LC(LS(V))  &none
&none                  &kp LS(LG(S))      &none      &kp LC(LS(T))  &kp LC(W)      &trans    &trans  &kp LC(Z)         &kp LC(Y)  &none      &none          &none
&none                  &none              &none      &trans         &trans         &trans    &trans  &trans                                                 &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_3_function_mac {
            bindings = <
&kp LC(LG(Q))  &none          &none  &kp LA(SPACE)         &kp LC(UP_ARROW)                         &MagicConnect_PW  &none      &Mac_PW    &none          &ASYNET_PW
&none          &none          &none  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)            &trans  &kp LG(A)         &kp LG(C)  &kp LG(V)  &kp LS(LG(V))  &none
&none          &kp LS(LG(S))  &none  &kp LG(LS(T))         &kp LG(W)              &trans    &trans  &kp LG(Z)         &kp LG(Y)  &none      &none          &none
&none          &none          &none  &trans                &trans                 &trans    &trans  &trans                                                 &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt0    &bt1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans            &trans       &trans  &trans  &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans  &trans  &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                      &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans              &trans         &trans
&trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans              &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp LA(LEFT_ARROW)  &kp LA(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                             &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
